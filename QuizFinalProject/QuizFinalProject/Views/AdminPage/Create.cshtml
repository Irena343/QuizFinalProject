@using QuizFinalProject.DataBase.Models
@model QuizFinalProject.DataBase.Models.Test
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <h2>Add a Test</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TestName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TestName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TestName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Category.CategoryName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category.CategoryName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Complexity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Complexity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Complexity, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.DurationTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DurationTime, new { htmlAttributes = new { @class = "form-control", @type= "time" } })
                @Html.ValidationMessageFor(model => model.DurationTime, "", new { @class = "text-danger" })
            </div>
        </div>




        @*<div class="form-group">
                @Html.LabelFor(model => model.Questions, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                        @Html.EditorFor(model => model.Questions.Add(new Question()), new { htmlAttributes = new { @class = "form-control" } })

                   @for (int j = 0; j < Model.Questions[j].QuestionId; j++)
                    {
                        for(int i = 0; i < Model.Questions[i].Answers.Count; i++)
                         {
                             @Html.EditorFor(model => model.Questions[j].Answers[i], new {htmlAttributes = new {@class = "form-control"}})
                         }
                    }
                </div>
            </div>*@





        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                @Html.ActionLink("Back to List", "Index", "AdminPage", new { @class = "btn btn - default" })
            </div>
        </div>
    </div>
}

